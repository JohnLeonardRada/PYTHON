, 2, parameterMap.size());
		assertNull(parameterMap.get("job"));
		assertNotNull(parameterMap.get("name"));
		assertNotNull(parameterMap.get("m1"));
		assertNull(parameterMap.get("m2"));
		
	}

	/**
	 * "name" should be removed from the map, as it is blocked.
	 * All other parameters should remain
	 * @throws Exception
	 */
	public void testAllowingByDefaultWithModel() throws Exception {
		
		Map contextMap = new HashMap();
		Map parameterMap = new HashMap();
		
		parameterMap.put("job", "Baker");
		parameterMap.put("name", "Martin");
		parameterMap.put("m1", "s1");
		parameterMap.put("m2", "s2");
		
		contextMap.put(ActionContext.PARAMETERS, parameterMap);
		stack.push(new AllowingByDefaultModel());
		
		Mock mockInvocation = new Mock(ActionInvocation.class);
		mockInvocation.expectAndReturn("getInvocationContext", new ActionContext(contextMap));
		mockInvocation.matchAndReturn("getAction", new AllowingByDefaultAction());
		mockInvocation.matchAndReturn("getStack", stack);
		mockInvocation.expectAndReturn("invoke", Action.SUCCESS);
		
		ActionInvocation invocation = (ActionInvocation) mockInvocation.proxy();
		
		AnnotationParameterFilterIntereptor intereptor = new AnnotationParameterFilterIntereptor();
		intereptor.intercept(invocation);
		
		assertEquals("